# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
 BuildAndroid:
    runs-on: ubuntu-20.04
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Setup Android NDK
        id: setup-ndk
        uses: nttld/setup-ndk@main
        with:
          ndk-version: r15c

      - name: Setup Java JDK
        uses: actions/setup-java@main
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5

      - name: Restore Previous Cache
        id: cache-debug-build-android-restore-gcc
        uses: actions/cache/restore@main
        with:
          path: |
            ~/haxelib
            ~/.gradle
            export/release/android/haxe
            export/release/android/obj
          key: cache-android-build-gcc

      - name: Installing Libraries
        run: |
          haxelib install hmm 
          haxelib run hmm install
      - name: Configure Android
        run: |
          haxelib run lime setup -alias -y
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Compile
        run: haxelib run lime build android -D ${{ matrix.storage-type }} -final
        env:
          cert_pass: nullfunni
          cert_alias_pass: nullfunni
          
      - name: Clear Previous Cache
        uses: actions/github-script@main
        with:
          script: |
            try {
            	const caches = await github.rest.actions.getActionsCacheList({
            		owner: context.repo.owner,
            		repo: context.repo.repo,
            	})
            	if (typeof caches.data.actions_caches != null && caches.data.actions_caches.length > 0) {
            		for (const cache of caches.data.actions_caches) {
            			if (cache.key == "cache-android-build-gcc") {
            				console.log('Clearing ' + cache.key + '...')
            				await github.rest.actions.deleteActionsCacheById({
            					owner: context.repo.owner,
            					repo: context.repo.repo,
            					cache_id: cache.id,
            				})
            				console.log("Previous Cache Cleared!")
            			}
            		}
            	}
            } catch (error) {
            	console.log(error.message);
            }

      - name: Save Current Cache
        id: cache-release-build-android-save-gcc
        uses: actions/cache/save@main
        with:
          path: |
            ~/haxelib
            ~/.gradle
            export/release/android/haxe
            export/release/android/obj
          key: cache-android-build-gcc

      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: androidBuild
          path: export/release/android/bin/app/build/outputs/apk/release/*.apk
